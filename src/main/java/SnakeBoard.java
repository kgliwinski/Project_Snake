import org.w3c.dom.css.Rect;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

public class SnakeBoard extends JFrame implements KeyListener, ActionListener {
    private JPanel mainPanel;
    private JButton startANewGameButton;
    private JLabel snakeInitialLabel;
    private JTextPane snakeBoardInitialScreenTextPane;

    private SnakeGame snakeGame = new SnakeGame();

    public SnakeBoard() {
        startANewGameButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // TODO When the board is created: start the game
                JOptionPane.showMessageDialog(startANewGameButton, snakeBoardInitialScreenTextPane.getText() + "Dupa");
            }
        });

        add(snakeGame);
//      snakeBoard.setContentPane(snakeBoard.mainPanel);
        addKeyListener(this);
        setTitle("Ssssssssssnake");
        setSize(720, 720);
        setVisible(true);
        setResizable(false);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }


    public static void main(String[] args) {
        SnakeBoard snakeBoard = new SnakeBoard();
        Timer timer = new Timer(150, snakeBoard);
        timer.start();
    }

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {

        int c = e.getKeyCode();

        if (c == 39 && !snakeGame.getSnakeDirection().equals(Snake.SnakeMovement.LEFT)) {
            System.out.println("right");
            this.snakeGame.setSnakeDirection(Snake.SnakeMovement.RIGHT);
        } else if (c == 37 && !snakeGame.getSnakeDirection().equals(Snake.SnakeMovement.RIGHT)) {
            System.out.println("left");
            this.snakeGame.setSnakeDirection(Snake.SnakeMovement.LEFT);
        } else if (c == 38 && !snakeGame.getSnakeDirection().equals(Snake.SnakeMovement.DOWN)) {
            System.out.println("up");
            this.snakeGame.setSnakeDirection(Snake.SnakeMovement.UP);
        } else if (c == 40 && !snakeGame.getSnakeDirection().equals(Snake.SnakeMovement.UP)) {
            System.out.println("down");
            this.snakeGame.setSnakeDirection(Snake.SnakeMovement.DOWN);
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        // redraw the screen
        repaint();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        startANewGameButton = new JButton();
        startANewGameButton.setText("Start a new game for two players");
        mainPanel.add(startANewGameButton, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        snakeInitialLabel = new JLabel();
        snakeInitialLabel.setText("Hello in snake! :D");
        mainPanel.add(snakeInitialLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        snakeBoardInitialScreenTextPane = new JTextPane();
        snakeBoardInitialScreenTextPane.setText("SnakeBoard: Initial screen");
        mainPanel.add(snakeBoardInitialScreenTextPane, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}


